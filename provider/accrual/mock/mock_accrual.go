// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package mockaccrual is a generated GoMock package.
package mockaccrual

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/vanamelnik/gophermart/model"
	accrual "github.com/vanamelnik/gophermart/provider/accrual"
)

// MockAccrualClient is a mock of AccrualClient interface.
type MockAccrualClient struct {
	ctrl     *gomock.Controller
	recorder *MockAccrualClientMockRecorder
}

// MockAccrualClientMockRecorder is the mock recorder for MockAccrualClient.
type MockAccrualClientMockRecorder struct {
	mock *MockAccrualClient
}

// NewMockAccrualClient creates a new mock instance.
func NewMockAccrualClient(ctrl *gomock.Controller) *MockAccrualClient {
	mock := &MockAccrualClient{ctrl: ctrl}
	mock.recorder = &MockAccrualClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccrualClient) EXPECT() *MockAccrualClientMockRecorder {
	return m.recorder
}

// Request mocks base method.
func (m *MockAccrualClient) Request(ctx context.Context, orderID model.OrderID) (*accrual.AccrualResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Request", ctx, orderID)
	ret0, _ := ret[0].(*accrual.AccrualResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Request indicates an expected call of Request.
func (mr *MockAccrualClientMockRecorder) Request(ctx, orderID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Request", reflect.TypeOf((*MockAccrualClient)(nil).Request), ctx, orderID)
}
